{"version":3,"file":"static/js/122.5f334044.chunk.js","mappings":"6OAsDA,EAhDgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAE0CN,EAF1C,4EAIGO,MAAK,SAAAC,GACJJ,EAAWI,EAAKA,KAAKC,QACtB,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAA,UAAeD,EAAME,SACtB,GACJ,GAAE,CAACb,KAGF,2BACGG,EAAQW,OAAS,GAChB,wBACGX,EAAQY,KAAI,SAAAC,GACX,IAAQC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,QAASC,EAAOH,EAAPG,GACzB,OACE,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EAKZ,OAGH,qEAEF,SAAC,KAAD,CAAgBC,UAAW,QAGhC,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=8d99b39cb91a8ab8040b3ee85cb6e931&language=en-US&page=1`\n      )\n      .then(data => {\n        setReviews(data.data.results);\n      })\n      .catch(error => {\n        toast.error(`${error.message}`);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => {\n            const { author, content, id } = review;\n            return (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n      <ToastContainer autoClose={2000} />\n    </div>\n  );\n};\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      author: PropTypes.string,\n      content: PropTypes.string,\n      id: PropTypes.string\n    })\n  )\n};\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","axios","then","data","results","catch","error","toast","message","length","map","review","author","content","id","autoClose"],"sourceRoot":""}