{"version":3,"file":"static/js/99.b2206d85.chunk.js","mappings":"kSAEaA,EAAYC,EAAAA,EAAAA,IAAH,4DAITC,EAAMD,EAAAA,EAAAA,IAAH,8DAIHE,EAAMF,EAAAA,EAAAA,OAAH,+dAsBHG,EAAWH,EAAAA,EAAAA,IAAH,mFAKRI,EAAaJ,EAAAA,EAAAA,GAAH,6EAMVK,EAASL,EAAAA,EAAAA,GAAH,mLAYNM,EAAUN,EAAAA,EAAAA,OAAH,gfAuBPO,EAAaP,EAAAA,EAAAA,GAAH,sEAIVQ,EAAYR,EAAAA,EAAAA,GAAH,6D,SC2DtB,EArHqB,WACnB,OAAsCS,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAYJ,EAASK,MAAMC,MAGjCC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAE0CV,EAF1C,6DAIGW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbF,MAAK,SAAAE,GACJ,GAAa,KAATA,EAAJ,CAGE,IACEC,EAMED,EANFC,YACAC,EAKEF,EALFE,MACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,OACAC,EACEN,EADFM,SAEF,OAAOpB,EAAe,CACpBqB,IAAI,mCAAD,OAAqCN,GACxCC,MAAOA,EACPG,OAAQA,EAAOG,KAAI,SAAAC,GAAK,OACtB,iBAAMC,MAAO,CAAEC,YAAa,OAA5B,SACGF,EAAMG,MADiCH,EAAMG,KAD1B,IAKxBN,SAAUA,EACVO,MAAOC,KAAKC,MAAqB,GAAfX,GAClBY,KAAM,IAAIC,KAAKA,KAAKC,MAAMf,IAAegB,eAE5C,CACF,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAA,UAAeD,EAAME,SACtB,GACJ,GAAE,CAACpC,IAEJ,IAAQoB,EAA8CtB,EAA9CsB,IAAKL,EAAyCjB,EAAzCiB,MAAOG,EAAkCpB,EAAlCoB,OAAQC,EAA0BrB,EAA1BqB,SAAUO,EAAgB5B,EAAhB4B,MAAOG,EAAS/B,EAAT+B,KAE7C,OACE,UAAC1C,EAAD,YACE,UAACG,EAAD,CAAK+C,KAAK,SAASC,QA3CN,0BAAMlC,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUK,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IAAxC,EA2Cb,WACE,SAAC,MAAD,CACEe,MAAO,CAAEC,YAAa,OACtBe,KAAM,KAHV,cAQA,UAAClD,EAAD,YACE,SAACE,EAAD,CAAUiD,IAAKpB,EAAKqB,IAAK1B,KACzB,4BACE,UAACvB,EAAD,WACGuB,EADH,KACYc,EADZ,QAGA,UAAClC,EAAD,mCAA2B+B,EAA3B,SAEA,SAAC/B,EAAD,wBACA,SAACC,EAAD,UAAYuB,KACZ,SAACxB,EAAD,sBACA,SAACC,EAAD,UAAYsB,WAGhB,oDACA,UAACzB,EAAD,YACE,yBACE,SAACC,EAAD,CAAS2C,KAAK,SAAd,UACE,SAAC,KAAD,CACEK,GAAG,OACHnC,MAAO,CAAEC,KAAMF,GACfiB,MAAO,CAAEoB,MAAO,OAAQC,eAAgB,QAH1C,uBASJ,yBACE,SAAClD,EAAD,CAAS2C,KAAK,SAAd,UACE,SAAC,KAAD,CACEK,GAAG,UACHnC,MAAO,CAAEC,KAAMF,GACfiB,MAAO,CAAEoB,MAAO,OAAQC,eAAgB,QAH1C,6BAUN,SAAC,EAAAC,SAAD,WACE,SAAC,KAAD,OAEF,SAAC,KAAD,CAAgBC,UAAW,QAGhC,C","sources":["Page/MovieDetails/MovieDetails.styled.js","Page/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 100%;\n  padding: 15px 0;\n`;\nexport const Box = styled.div`\n  display: flex;\n  padding: 10px 0;\n`;\nexport const Btn = styled.button`\n  border: none;\n  width: 300px;\n  padding: 0 5px;\n  cursor: pointer;\n  font-family: 'Roboto Slab', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.88;\n  letter-spacing: 0.06em;\n  border-radius: 4px;\n  color: #ffffff;\n  background-color: #081c4b;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #044813;\n  }\n`;\nexport const CardFilm = styled.img`\n  display: block;\n  margin-right: 10px;\n  width: 300px;\n`;\nexport const TitleMovie = styled.h1`\n  margin: 0;\n  font-size: 30px;\n  color: #081c4b;\n`;\n\nexport const BoxBtn = styled.ul`\n  margin: 0;\n  padding-left: 0;\n  list-style: none;\n  font-size: 25px;\n  display: flex;\n  align-items: center;\n  li {\n    margin-right: 10px;\n  }\n`;\n\nexport const BtnInfo = styled.button`\n  border: none;\n  width: 140px;\n  height: 40px;\n  padding: 0 5px;\n  cursor: pointer;\n  font-family: 'Roboto Slab', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.88;\n  letter-spacing: 0.06em;\n  border-radius: 4px;\n  color: #ffffff;\n  background-color: #081c4b;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #044813;\n  }\n`;\nexport const MovieDescr = styled.h2`\n  font-size: 22px;\n  margin: 50px 0 10px 0;\n`;\nexport const MovieInfo = styled.h2`\n  width: 400px;\n  font-size: 15px;\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { AiFillBackward } from 'react-icons/ai';\nimport { ToastContainer, toast } from 'react-toastify';\nimport {\n  Link,\n  useParams,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport {\n  Btn,\n  Container,\n  Box,\n  CardFilm,\n  TitleMovie,\n  BoxBtn,\n  BtnInfo,\n  MovieDescr,\n  MovieInfo,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [currentFilm, setCurrentFilm] = useState('');\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backClick = location.state.from;\n  const onGoBack = () => navigate(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=8d99b39cb91a8ab8040b3ee85cb6e931&language=en-US`\n      )\n      .then(response => response.data)\n      .then(data => {\n        if (data === '') {\n          return;\n        } else {\n          const {\n            poster_path,\n            title,\n            release_date,\n            vote_average,\n            genres,\n            overview,\n          } = data;\n          return setCurrentFilm({\n            img: `https://image.tmdb.org/t/p/w500/${poster_path}`,\n            title: title,\n            genres: genres.map(genre => (\n              <span style={{ marginRight: '5px' }} key={genre.name}>\n                {genre.name}\n              </span>\n            )),\n            overview: overview,\n            score: Math.round(vote_average * 10),\n            date: new Date(Date.parse(release_date)).getFullYear(),\n          });\n        }\n      })\n      .catch(error => {\n        toast.error(`${error.message}`);\n      });\n  }, [movieId]);\n\n  const { img, title, genres, overview, score, date } = currentFilm;\n\n  return (\n    <Container>\n      <Btn type=\"button\" onClick={onGoBack}>\n        <AiFillBackward\n          style={{ marginRight: '5px' }}\n          size={16}\n        ></AiFillBackward>\n        Go back\n      </Btn>\n\n      <Box>\n        <CardFilm src={img} alt={title} />\n        <div>\n          <TitleMovie>\n            {title} ({date})\n          </TitleMovie>\n          <MovieDescr>User Score {`${score}%`}</MovieDescr>\n\n          <MovieDescr>Overview</MovieDescr>\n          <MovieInfo>{overview}</MovieInfo>\n          <MovieDescr>Genres</MovieDescr>\n          <MovieInfo>{genres}</MovieInfo>\n        </div>\n      </Box>\n      <h2>Additional information</h2>\n      <BoxBtn>\n        <li>\n          <BtnInfo type=\"button\">\n            <Link\n              to=\"cast\"\n              state={{ from: backClick }}\n              style={{ color: '#fff', textDecoration: 'none' }}\n            >\n              Cast\n            </Link>\n          </BtnInfo>\n        </li>\n        <li>\n          <BtnInfo type=\"button\">\n            <Link\n              to=\"reviews\"\n              state={{ from: backClick }}\n              style={{ color: '#fff', textDecoration: 'none' }}\n            >\n              Reviews\n            </Link>\n          </BtnInfo>\n        </li>\n      </BoxBtn>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n      <ToastContainer autoClose={2000} />\n    </Container>\n  );\n};\nMovieDetails.propTypes = {\n  currentFilm: PropTypes.arrayOf(\n    PropTypes.shape({\n      img: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      genres: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      score: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default MovieDetails;\n"],"names":["Container","styled","Box","Btn","CardFilm","TitleMovie","BoxBtn","BtnInfo","MovieDescr","MovieInfo","useState","currentFilm","setCurrentFilm","movieId","useParams","location","useLocation","navigate","useNavigate","backClick","state","from","useEffect","axios","then","response","data","poster_path","title","release_date","vote_average","genres","overview","img","map","genre","style","marginRight","name","score","Math","round","date","Date","parse","getFullYear","catch","error","toast","message","type","onClick","size","src","alt","to","color","textDecoration","Suspense","autoClose"],"sourceRoot":""}