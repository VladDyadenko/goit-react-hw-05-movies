{"version":3,"file":"static/js/394.53dbfcad.chunk.js","mappings":"6OAgCA,EA3Ba,WACX,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,8FAKGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbF,MAAK,SAAAE,GACJL,EAAYK,EAAKC,QAClB,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAA,UAAeD,EAAME,SACtB,GACJ,GAAE,KAGD,iCACE,2CACCX,EAASY,OAAS,IAAK,SAACC,EAAA,EAAD,CAAOb,SAAUA,KACzC,SAAC,KAAD,CAAgBc,UAAW,QAGhC,C,oFCDD,EA1Bc,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SACTe,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGhB,EAASiB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACnB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA1C,SACGI,KAFID,EAMZ,KAGN,C","sources":["Page/Home/Home.jsx","components/Films/Films.jsx"],"sourcesContent":["import axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Films from 'components/Films';\nimport { useEffect, useState } from 'react';\n\nconst Home = () => {\n  const [arrFilms, setArrFilms] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `\nhttps://api.themoviedb.org/3/trending/movie/day?api_key=8d99b39cb91a8ab8040b3ee85cb6e931`\n      )\n      .then(response => response.data)\n      .then(data => {\n        setArrFilms(data.results);\n      })\n      .catch(error => {\n        toast.error(`${error.message}`);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {arrFilms.length > 0 && <Films arrFilms={arrFilms} />}\n      <ToastContainer autoClose={2000} />\n    </>\n  );\n};\n\nexport default Home;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Films = ({ arrFilms }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {arrFilms.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nFilms.propTypes = {\n  arrFilms: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Films;\n"],"names":["useState","arrFilms","setArrFilms","useEffect","axios","then","response","data","results","catch","error","toast","message","length","Films","autoClose","location","useLocation","map","id","title","to","state","from"],"sourceRoot":""}