{"version":3,"file":"static/js/832.7a94c94c.chunk.js","mappings":"8PA8GA,EAtGqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAS,iBAAGJ,QAAH,IAAGA,GAAH,UAAGA,EAAUK,aAAb,aAAG,EAAiBC,YAApB,QAA4B,KAI3CC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAE0Cb,EAF1C,6DAIGc,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbF,MAAK,SAAAE,GACJ,GAAa,KAATA,EAAJ,CAGE,IACEC,EAMED,EANFC,YACAC,EAKEF,EALFE,MACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,OACAC,EACEN,EADFM,SAEF,OAAOlB,EAAe,CACpBmB,IAAI,mCAAD,OAAqCN,GACxCC,MAAOA,EACPG,OAAQA,EAAOG,KAAI,SAAAC,GAAK,OACtB,iBAAMC,MAAO,CAAEC,YAAa,OAA5B,SACGF,EAAMG,MADiCH,EAAMG,KAD1B,IAKxBN,SAAUA,EACVO,MAAOC,KAAKC,MAAqB,GAAfX,GAClBY,KAAM,IAAIC,KAAKA,KAAKC,MAAMf,IAAegB,eAE5C,CACF,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAA,UAAeD,EAAME,SACtB,GACJ,GAAE,CAACvC,IAGJ,IAAQuB,EAA8CpB,EAA9CoB,IAAKL,EAAyCf,EAAzCe,MAAOG,EAAkClB,EAAlCkB,OAAQC,EAA0BnB,EAA1BmB,SAAUO,EAAgB1B,EAAhB0B,MAAOG,EAAS7B,EAAT6B,KAE7C,OACE,iCACA,oBAAQN,MAAO,CAACc,MAAM,QAASC,QAAQ,QAASC,KAAK,SAASC,QA7C9C,kBAAKpC,EAASE,EAAd,EA6ChB,WACA,SAAC,MAAD,CAAgBiB,MAAO,CAACC,YAAY,OAAQiB,KAAM,KADlD,cAKE,iBAAKlB,MAAO,CAAEe,QAAS,OAAQI,QAAS,QAAxC,WACE,gBAAKnB,MAAO,CAAEC,YAAa,QAA3B,UACE,gBAAKmB,IAAKvB,EAAKwB,IAAK7B,EAAOsB,MAAO,SAEpC,4BACE,0BACGtB,EADH,KACYc,EADZ,QAGA,kDAAmBH,EAAnB,SAEA,sCACA,eAAIH,MAAO,CAAEsB,SAAU,QAAvB,SAAkC1B,KAClC,oCACA,eAAII,MAAO,CAAEsB,SAAU,QAAvB,SAAkC3B,WAGtC,oDACA,2BACE,yBACE,SAAC,KAAD,CAAM4B,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAC,SAAD,WACE,SAAC,KAAD,OAEF,SAAC,KAAD,CAAgBC,UAAW,QAGhC,C","sources":["Page/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { AiFillBackward } from \"react-icons/ai\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useEffect, useState, Suspense } from 'react';\nimport { Link, useParams, Outlet, useNavigate, useLocation } from 'react-router-dom';\n\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const [currentFilm, setCurrentFilm] = useState('');\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backClick = location?.state?.from ?? '/';\n  const onGoBack = (() =>navigate(backClick) );\n \n  \n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=8d99b39cb91a8ab8040b3ee85cb6e931&language=en-US`\n      )\n      .then(response => response.data)\n      .then(data => {\n        if (data === '') {\n          return;\n        } else {\n          const {\n            poster_path,\n            title,\n            release_date,\n            vote_average,\n            genres,\n            overview,\n          } = data;\n          return setCurrentFilm({\n            img: `https://image.tmdb.org/t/p/w500/${poster_path}`,\n            title: title,\n            genres: genres.map(genre => (\n              <span style={{ marginRight: '5px' }} key={genre.name}>\n                {genre.name}\n              </span>\n            )),\n            overview: overview,\n            score: Math.round(vote_average * 10),\n            date: new Date(Date.parse(release_date)).getFullYear(),\n          });\n        }\n      })\n      .catch(error => {\n        toast.error(`${error.message}`);\n      });\n  }, [movieId]);\n  \n\n  const { img, title, genres, overview, score, date } = currentFilm;\n\n  return (\n    <>\n    <button style={{width:'100px', display:'flex'}} type='button' onClick={onGoBack}>\n    <AiFillBackward style={{marginRight:'5px'}} size={16}></AiFillBackward>\n      Go back\n    </button>\n     \n      <div style={{ display: 'flex', padding: '15px' }}>\n        <div style={{ marginRight: '10px' }}>\n          <img src={img} alt={title} width={300} />\n        </div>\n        <div>\n          <h1>\n            {title} ({date})\n          </h1>\n          <h2>User Score {`${score}%`}</h2>\n\n          <h2>Overview</h2>\n          <h3 style={{ fontSize: '15px' }}>{overview}</h3>\n          <h2>Genres</h2>\n          <h3 style={{ fontSize: '20px' }}>{genres}</h3>\n        </div>\n      </div>\n      <h2>Additional information</h2>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n      <ToastContainer autoClose={2000} />\n    </>\n  );\n};\nMovieDetails.propTypes = {\n  currentFilm: PropTypes.arrayOf(\n    PropTypes.shape({\n      img: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      genres: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      score: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","currentFilm","setCurrentFilm","location","useLocation","navigate","useNavigate","backClick","state","from","useEffect","axios","then","response","data","poster_path","title","release_date","vote_average","genres","overview","img","map","genre","style","marginRight","name","score","Math","round","date","Date","parse","getFullYear","catch","error","toast","message","width","display","type","onClick","size","padding","src","alt","fontSize","to","Suspense","autoClose"],"sourceRoot":""}