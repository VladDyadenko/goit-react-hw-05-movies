{"version":3,"file":"static/js/237.dac0ce05.chunk.js","mappings":"2QAEaA,EAAYC,EAAAA,EAAAA,IAAH,0DAITC,EAAQD,EAAAA,EAAAA,GAAH,+C,SC4BlB,EA3Ba,WACX,OAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,8FAKGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbF,MAAK,SAAAE,GACJL,EAAYK,EAAKC,QAClB,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAA,UAAeD,EAAME,SACtB,GACJ,GAAE,KAGD,UAACf,EAAD,YACE,SAACE,EAAD,6BACCE,EAASY,OAAS,IAAK,SAACC,EAAA,EAAD,CAAOb,SAAUA,KACzC,SAAC,KAAD,CAAgBc,UAAW,QAGhC,C,kHC9BYC,EAAMlB,EAAAA,EAAAA,GAAH,4HAQHmB,EAAOnB,EAAAA,EAAAA,GAAH,+D,kBCJXoB,GAAapB,EAAAA,EAAAA,IAAOqB,EAAAA,GAAPrB,CAAH,uUAwDhB,EAnCc,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACTmB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACL,EAAD,iBACGf,QADH,IACGA,OADH,EACGA,EAAUqB,KAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAC3B,OACE,SAACR,EAAD,WACE,UAACC,EAAD,CAAYQ,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAAhD,WACE,gBACES,IACEJ,EAAa,0CAC0BA,GACnCK,EAENC,IAAKP,EACLQ,MAAO,KAERR,MAXMD,EAed,KAGN,C","sources":["Page/Home/Home.styled.js","Page/Home/Home.jsx","components/Films/Films.styled.js","components/Films/Films.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 100%;\n  padding: 10px;\n`;\nexport const Title = styled.h1`\n  margin: 0 0 20px 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport Films from 'components/Films';\nimport { Container, Title } from './Home.styled';\n\nconst Home = () => {\n  const [arrFilms, setArrFilms] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `\nhttps://api.themoviedb.org/3/trending/movie/day?api_key=8d99b39cb91a8ab8040b3ee85cb6e931`\n      )\n      .then(response => response.data)\n      .then(data => {\n        setArrFilms(data.results);\n      })\n      .catch(error => {\n        toast.error(`${error.message}`);\n      });\n  }, []);\n\n  return (\n    <Container>\n      <Title>Trending today</Title>\n      {arrFilms.length > 0 && <Films arrFilms={arrFilms} />}\n      <ToastContainer autoClose={2000} />\n    </Container>\n  );\n};\n\nexport default Home;\n","import styled from '@emotion/styled';\n\nexport const Box = styled.ul`\n  width: 100%;\n\n  margin: 10px auto;\n  padding: 0 5px;\n  list-style: none;\n  font-size: 20px;\n`;\nexport const List = styled.li`\n  width: 100%;\n  margin-bottom: 5px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Box, List } from './Films.styled';\nimport defalteImg from '../../Uttils/img/defalteImg.jpg';\n\nconst StyledLink = styled(Link)`\n  color: #000000;\n  text-decoration: none;\n  margin-right: 10px;\n  font-weight: 500;\n  font-size: 25px;\n  display: flex;\n  align-items: center;\n  img {\n    margin-right: 20px;\n    display: block;\n    :hover {\n      transform: scale(1.5);\n    }\n  }\n\n  &:hover {\n    color: #7f1f58;\n  }\n`;\n\nconst Films = ({ arrFilms }) => {\n  const location = useLocation();\n\n  return (\n    <Box>\n      {arrFilms?.map(({ id, title, backdrop_path }) => {\n        return (\n          <List key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={\n                  backdrop_path\n                    ? `https://image.tmdb.org/t/p/w500/${backdrop_path}`\n                    : defalteImg\n                }\n                alt={title}\n                width={80}\n              />\n              {title}\n            </StyledLink>\n          </List>\n        );\n      })}\n    </Box>\n  );\n};\nFilms.propTypes = {\n  arrFilms: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Films;\n"],"names":["Container","styled","Title","useState","arrFilms","setArrFilms","useEffect","axios","then","response","data","results","catch","error","toast","message","length","Films","autoClose","Box","List","StyledLink","Link","location","useLocation","map","id","title","backdrop_path","to","state","from","src","defalteImg","alt","width"],"sourceRoot":""}